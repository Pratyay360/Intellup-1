# Generated by Django 3.2.5 on 2021-07-03 10:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(editable=False, max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_normalUser', models.BooleanField(default=True, null=True)),
                ('is_normalAdmin', models.BooleanField(default=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Battle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_points', models.IntegerField(default=0, null=True)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=30, null=True)),
                ('is_active', models.BooleanField(default=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BattleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(null=True)),
                ('time_bound', models.BooleanField(null=True)),
                ('max_time', models.BigIntegerField(null=True)),
                ('no_of_questions', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BattleHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questions', models.TextField(default='[]', null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('battle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.battle')),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(null=True)),
                ('max_point', models.IntegerField(default=0, null=True)),
                ('valid_till', models.DateTimeField(null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContestHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.contest')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserExtendedProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dob', models.DateField(null=True)),
                ('is_premium_user', models.BooleanField(default=False, null=True)),
                ('total_points', models.IntegerField(default=0, null=True)),
                ('present_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.schoolclass')),
                ('user_base_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionLogs',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.IntegerField(default=0, null=True)),
                ('transaction_id', models.CharField(max_length=100, null=True)),
                ('status', models.BooleanField(default=False, null=True)),
                ('ordered_on', models.DateTimeField(auto_now_add=True)),
                ('verified_on', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.userextendedprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ResetPasswordDB',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.TextField(null=True)),
                ('is_used', models.BooleanField(default=False, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.userextendedprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ReferralLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('referred_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referred_by_user', to='datahandler.userextendedprofile')),
                ('referred_to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referred_to_user', to='datahandler.userextendedprofile')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionBrunch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(null=True)),
                ('answers', models.TextField(null=True)),
                ('answer_index', models.TextField(null=True)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='easy', max_length=20, null=True)),
                ('points', models.IntegerField(default=0, null=True)),
                ('school_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.schoolclass')),
                ('school_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.schoolsubject')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionAnswerForContest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(null=True)),
                ('answers', models.TextField(null=True)),
                ('answer_index', models.TextField(null=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.contest')),
            ],
        ),
        migrations.CreateModel(
            name='PointsLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0, null=True)),
                ('description', models.TextField(null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.userextendedprofile')),
            ],
        ),
        migrations.CreateModel(
            name='PointsDepositByBattleContest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0, null=True)),
                ('category', models.CharField(choices=[('contest', 'Contest'), ('battle', 'Battle')], max_length=20, null=True)),
                ('battle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='datahandler.battlehistory')),
                ('contest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='datahandler.contesthistory')),
            ],
        ),
        migrations.AddField(
            model_name='contesthistory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.userextendedprofile'),
        ),
        migrations.AddField(
            model_name='contest',
            name='school_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.schoolclass'),
        ),
        migrations.AddField(
            model_name='contest',
            name='school_subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.schoolsubject'),
        ),
        migrations.AddField(
            model_name='battlehistory',
            name='user1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user1', to='datahandler.userextendedprofile'),
        ),
        migrations.AddField(
            model_name='battlehistory',
            name='user2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user2', to='datahandler.userextendedprofile'),
        ),
        migrations.AddField(
            model_name='battle',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.battlecategory'),
        ),
        migrations.AddField(
            model_name='battle',
            name='school_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.schoolclass'),
        ),
        migrations.AddField(
            model_name='battle',
            name='school_subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahandler.schoolsubject'),
        ),
    ]
